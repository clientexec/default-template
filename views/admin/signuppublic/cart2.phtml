<?php echo $this->partial('signuppublic/cartheader.phtml', array('tempInformation'=>$this->tempInformation,'user'=>$this->user,'step'=>$this->step, 'summary'=>$this->summary));
    $customFields = json_encode($this->customFields);
    $count_of_addons = 0;
?>

<script data-cfasync="false" type="text/javascript">
$(document).ready(function(){
    <?php echo "var customFields = ". $customFields . ";\n"; ?>
    cart.get_package_customfields(customFields);
});

function validateSubDomain(controlid) {
    $('.parsley-error-list').remove();

    //disable continueButton while validating
    var continueButton = document.getElementById("continue-button");
    continueButton.disabled = true;

    //subdomain
    var subDomainNameField = document.getElementById(controlid);
    var subDomainName = subDomainNameField.value;
    var subDomainTldField = document.getElementById("subdomaintld_"+controlid);
    var subDomainTld = subDomainTldField.options[subDomainTldField.selectedIndex].value;

    $.post(
        'index.php?fuse=clients&controller=products&action=isvalidsubdomain',
        {
            subDomainName: subDomainName,
            subDomainTld: subDomainTld
        },
        function(response) {
            var data = ce.parseResponse(response);
            if (data.results === true){
                //enable continueButton if valid
                continueButton.disabled = false;
            }else{
                switch(data.results){
                    case 'forbidden':
                        $('#' + controlid).after('<ul class="parsley-error-list" style="display: block;"><li class="required" style="display: list-item;">'+'<?php echo $this->user->lang("This subdomain is currently not allowed");?>'+'</li></ul>');
                        break;
                    case 'duplicated':
                        $('#' + controlid).after('<ul class="parsley-error-list" style="display: block;"><li class="required" style="display: list-item;">'+'<?php echo $this->user->lang("This subdomain is already in use");?>'+'</li></ul>');
                        break;
                }
            }
        }
    );
}

</script>

<?php
if (isset($_POST["domainName"])) {
    $domainUrl = "&amp;domainName=" . $_POST["domainName"];
    if (isset($_POST["tld"])) {
        $domainUrl .= "&amp;tld=" . $_POST["tld"];
    }
} else {
    $domainUrl = "";
}
?>

<!-- bundled products // hosting and domain -->
<div class="ce-box col-xs-12">
    <div class="ce-box-inner col-xs-12">
        <h1><?php echo $this->user->lang("Configure Package");?></h1>
        <form action="index.php?fuse=admin&controller=signup&action=saveproductfields" method="POST" name="submitForm" id="submitForm" parsley-validate>
        <input type="hidden" name="formId" value="configureProduct">
        <input type="hidden" name="priceTerm" value="<?php echo $this->paymentterm;?>">
        <input type="hidden" name="product" value="<?php echo $this->product;?>">

        <p class="alert alert-info ce-alert ce-alert-info">
            <?php if (count($this->customFields) > 0) { ?>
                <?php if (count($this->packageAddons) > 0) { ?>
                    <?php echo $this->user->lang("Please fill in the product fields below and check through our available add-ons.");?>
                <?php } else { ?>
                    <?php echo $this->user->lang("Please fill in the product fields below.");?>
                <?php } ?>
            <?php } else { ?>
                <?php if (count($this->packageAddons) > 0) { ?>
                    <?php echo $this->user->lang("Please check through our available add-ons.");?>
                <?php } ?>
            <?php } ?>
        </p>

        <div class="customfields-wrapper container-fluid">
            <div class="searching-customfields"><i class="icon-spinner icon-spin icon-large"></i>&nbsp;&nbsp;<?php echo $this->user->lang("Waiting ...");?></div>
        </div>

        <?php if (count($this->packageAddons) > 0) { ?>
        <div class="addons-wrapper container-fluid" style="display:none;">
            <h2><?php echo $this->user->lang("Product Add-ons");?></h2>

            <?php foreach ($this->packageAddons as $addon) {
                if (!is_array($addon['prices']) || count($addon['prices']) == 0) {
                    continue;
                }
                $count_of_addons++;
                ?>
                <div class="col-xs-12 col-sm-5 form-group addon-type">
                    <label class="customfield_label control-label">
                        <?php if ($addon['desclanguage'] != '') { ?>
                        <span data-toggle="popover-hover" data-html="true" data-placement="top" title="<?php echo $this->user->lang("Description");?>" data-content="<?php echo $this->escape($addon['desclanguage']);?>" class="tip-target">
                        <?php } ?>
                            <b><?php echo $this->user->lang($addon['namelanguage']);?></b>
                        <?php if ($addon['desclanguage'] != '') { ?>
                        </span>
                        <?php } ?>
                    </label>


                    <?php switch (@$addon['addon_type']) {
                        case '2':    // quantity ?>
                            <?php $countAddonOptions = count($addon['prices']); ?>
                            <table style="width:100%">
                                <tr>
                                    <td style="width:75px">
                                        <?php echo $this->user->lang("Quantity");?> *</br>
                                    </td>
                                    <td>
                                        <?php if ($countAddonOptions > 1) { ?>
                                            <?php echo $this->user->lang("Option");?></br>
                                        <?php } ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width:75px">
                                        <input type="number" min="0" style="width:70px;" id="addonQuantity_<?php echo $addon['id']; ?>" name="addonQuantity_<?php echo $addon['id']; ?>" class="quantity form-control" value="0">
                                    </td>
                                    <td>
                                        <?php if ($countAddonOptions == 1) { ?>
                                            <input type="hidden" name="addonSelect_<?php echo $addon['id']; ?>" value="addon_<?php echo $addon['id']; ?>_<?php echo $addon['prices'][0]['price_id']; ?>_<?php echo $addon['prices'][0]['recurringprice_cyle']; ?>">
                                            <?php
                                                //Removing Addon Name from the Addon Option Name if it is there at the beginning
                                                $prefix = $addon['namelanguage'];
                                                $str = $addon['prices'][0]['pricelanguage'];
                                                if (substr($str, 0, strlen($prefix)) == $prefix) {
                                                    $str = substr($str, strlen($prefix));
                                                }
                                                echo $str;
                                            ?>
                                        <?php } else { ?>
                                            <select name="addonSelect_<?php echo $addon['id']; ?>" class="selectpicker form-control">
                                                <?php foreach ($addon['prices'] as $price) { ?>
                                                <option value="addon_<?php echo $addon['id']; ?>_<?php echo $price['price_id']; ?>_<?php echo $price['recurringprice_cyle']; ?>" <?php echo $price['price_selected']; ?>><?php echo $price['pricelanguage']; ?></option>
                                                <?php } ?>
                                            </select>
                                        <?php } ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        <?php echo "* ".$this->user->lang("Prices will be multiplied by the quantity");?></br>
                                    </td>
                                </tr>
                            </table>
                            <?php break;
                        case '0':    // dropdown ?>
                            <select name="addonSelect_<?php echo $addon['id']; ?>" class="selectpicker form-control">
                                <?php foreach ($addon['prices'] as $price) { ?>
                                <option value="addon_<?php echo $addon['id']; ?>_<?php echo $price['price_id']; ?>_<?php echo $price['recurringprice_cyle']; ?>" <?php echo $price['price_selected']; ?>><?php echo $price['pricelanguage']; ?></option>
                                <?php } ?>
                            </select>
                            </br>
                            <?php break;
                        case '1':    // radio buttons
                            foreach ($addon['prices'] as $price) { ?>
                                <div>
                                    <label class="radio">
                                        <input type="radio" name="addonSelect_<?php echo $addon['id']; ?>" class="dropdown" id="addon_<?php echo $addon['id']; ?>_<?php echo $price['price_id']; ?>_<?php echo $price['recurringprice_cyle']; ?>" value="addon_<?php echo $addon['id']; ?>_<?php echo $price['price_id']; ?>_<?php echo $price['recurringprice_cyle']; ?>" style="background:none; border:0px;" <?php echo $price['price_selected']; ?>>
                                        <?php echo $price['pricelanguage']; ?>
                                    </label>
                                </div>
                            <?php }
                            break;
                    } ?>
                    </br>
                </div>
            <?php } ?>
        </div>
        <?php } ?>

        <div class="form-actions">
            <button id="continue-button" class="pull-right btn btn-default btn-lg cart2-continue-button" disabled> <?php echo $this->user->lang('Continue'); ?> &raquo;</button>
        </div>
        </form>

    </div>
</div>

<script data-cfasync="false" type="text/javascript">
    $(document).ready(function() {
        var count_of_addons = <?php echo $count_of_addons;?>;
        if (count_of_addons > 0) $('.addons-wrapper').show();
        var password_fields = [];
        <?php if ($this->enforcePassword == true && count($this->passwordFields) > 0) { ?>
            <?php foreach ($this->passwordFields as $passwordField) { ?>

                password_fields.push("<?php echo $passwordField;?>");
                //$('#CT_' + <?php echo $passwordField; ?>).attr('data-remote','index.php?controller=signup&fuse=admin&action=testpasswordstrength');

            <?php } ?>
        <?php } ?>
        $('#submitForm').parsley();

        $('#continue-button').on('click', function(e) {
            $('.parsley-error-list.help-block').parent().removeClass('has-error');
            $('.parsley-error-list.help-block').remove();
            e.preventDefault();
            var password_validated = true;

            //let's validate remote data
            if (password_fields.length > 0) {
                $.each(password_fields,function(index,obj){
                    if ($.trim($('#CT_' + obj).val()) == "") return;
                    $.ajax({
                        type: "POST",
                        data: {"password":$('#CT_' + obj).val()},
                        url: 'index.php?controller=signup&fuse=admin&action=testpasswordstrength',
                        async: false,
                        success : function(response) {
                            json = ce.parseResponse(response);
                            if (!json.valid) {
                                password_validated = false;
                                $('#CT_' + obj).parent().addClass('has-error');
                                $('#CT_' + obj).after('<span class="help-block parsley-error-list">'+json.errorMessage+'</span>');
                                $('#CT_' + obj).get(0).scrollIntoView();
                            }
                        }
                    });
                });

                if (password_validated && $('#submitForm').parsley('validate')) {
                    $('#submitForm').submit();
                }


            } else if ($('#submitForm').parsley('validate')) {
                $('#submitForm').submit();
            }


            return false;
        });

        $('.quantity').each(function() {
            $(this).keydown(function (e) {
                // Allow: delete, backspace, tab, escape, enter
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                     // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                     // Allow: end, home, left, up, right, down
                    (e.keyCode >= 35 && e.keyCode <= 40)) {
                         // let it happen, don't do anything
                         return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });
        });
    })
</script>

<?php if ($this->bundled) { ?>
<script data-cfasync="false" type="text/javascript">
    $(document).ready(function() {
        $('a:not(.button, .btn)').click(function(e){
            var selectedLink = this;
            if ($(this).hasClass('showcancelalert')) {
                RichHTML.msgBox(lang('Are you sure you want to cancel this item?'),
                {
                    type: 'yesno'
                },
                function(result) {
                    if (result.btn == lang('Yes')) {
                        confirmDleteItemFromCart(selectedLink);
                    }
                });
                return false;
            } else if ($(this).hasClass('nopopupalert')) {
                confirmDeleteItemFromCart(selectedLink);
            } else {
                RichHTML.msgBox(lang('Leaving now will cancel this item.  Are you sure you want to leave?'),
                {
                    type: 'yesno'
                },
                function(result) {
                    if (result.btn == lang('Yes')) {
                        confirmDleteItemFromCart(selectedLink);
                    }
                });
                return false;
            }
        });
    });


    confirmDleteItemFromCart = function(link)
    {
        var cartItem = "<?php echo $this->cartParentPackage;?>";
        if (cartItem != ''){
            $.ajax({
            url: 'index.php?fuse=admin&controller=signup&action=deletecartitem',
                success: function () {
                    window.location = link;
            },
            data: { cartItem: cartItem },
            dataType: 'json'
        });
      } else {
        window.location = link;
      }
    }
</script>
<?php } ?>

<?php if ($this->maxmind_device_tracking_enabled === true) { ?>
<script data-cfasync="false">
    maxmind_user_id = '<?php echo $this->maxmind_account_id; ?>';
    (function() {
        var loadDeviceJs = function() {
            var element = document.createElement('script');
            element.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//device.maxmind.com/js/device.js';
            document.body.appendChild(element);
        };
        if (window.addEventListener) {
            window.addEventListener('load', loadDeviceJs, false);
        } else if (window.attachEvent) {
            window.attachEvent('onload', loadDeviceJs);
        }
    })();
</script>
<?php } ?>